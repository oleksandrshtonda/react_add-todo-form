{"version":3,"sources":["api/users.ts","api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","components/Header/Header.tsx","App.tsx","utils/combineTodoAndUser.ts","utils/changeTheme.ts","utils/handlers/handleOnSubmit.ts","utils/handlers/handleChangeInput.ts","utils/handlers/handleChooseUser.ts","index.tsx"],"names":["id","name","username","email","title","completed","userId","UserInfo","_ref","user","_jsx","className","href","concat","children","TodoInfo","todo","theme","isCompleted","_jsxs","TodoList","todos","map","Header","changeTheme","type","onClick","App","_useState","useState","users","userObj","find","userInOutPut","filter","data","combineTodoAndUser","todosFromServer","usersFromServer","_useState2","_slicedToArray","setTodos","_useState3","_useState4","selectedUserId","setSelectedUserId","_useState5","_useState6","titleOfNewTodo","setTitleOfNewTodo","_useState7","_useState8","showErrorEmptyTitle","setShowErrorEmptyTitle","_useState9","_useState10","showErrorUserIsNotChoosen","setShowErrorUserIsNotChoosen","_useState11","_useState12","setTheme","action","method","onSubmit","event","preventDefault","trim","newTodo","length","_toConsumableArray","handleOnSubmit","onChange","setValue","target","value","handleChangeInput","placeholder","handleChooseUser","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f9776e43.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import { User } from '../../types/User';\n\nexport const UserInfo: React.FC<{\n  user: User,\n}> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import { TodoWithUser } from '../../types/TodoWithUser';\nimport { UserInfo } from '../UserInfo';\n\nexport const TodoInfo: React.FC<{\n  todo: TodoWithUser\n  theme: 'light' | 'dark'\n}> = ({ todo, theme }) => {\n  const {\n    title, id, completed, user,\n  } = todo;\n\n  const isCompleted = (completed && ' TodoInfo--completed') || '';\n\n  return (\n    <article data-id={id} className={`TodoInfo${isCompleted} TodoInfo--${theme}`}>\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      <UserInfo user={user} />\n    </article>\n  );\n};\n","import { TodoWithUser } from '../../types/TodoWithUser';\nimport { TodoInfo } from '../TodoInfo';\n\nexport const TodoList: React.FC<{\n  todos: TodoWithUser[],\n  theme: 'light' | 'dark',\n}> = ({ todos, theme }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => {\n        return (\n          <TodoInfo\n            key={todo.id}\n            todo={todo}\n            theme={theme}\n          />\n        );\n      })}\n    </section>\n  );\n};\n","import './Header.scss';\n\ninterface Props {\n  changeTheme: () => void;\n  theme: string;\n}\n\nexport const Header: React.FC<Props> = ({ changeTheme, theme }) => {\n  return (\n    <header className={`header header--${theme}`}>\n      <span className={`logo logo--${theme}`}>Add ToDo</span>\n      <button\n        className={`change-theme-btn change-theme-btn--${theme}`}\n        type=\"button\"\n        onClick={changeTheme}\n      >\n        THEME\n      </button>\n    </header>\n  );\n};\n","//  React import's\nimport React, { useState } from 'react';\nimport './App.scss';\n\n//  API data\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\n//  types\nimport { User } from './types/User';\n\n//  components\nimport { TodoList } from './components/TodoList';\n\n//  handlers\nimport { handleChooseUser } from './utils/handlers/handleChooseUser';\nimport { handleChangeInput } from './utils/handlers/handleChangeInput';\n\n//  other utils\nimport { combineTodoAndUser } from './utils/combineTodoAndUser';\nimport { TodoWithUser } from './types/TodoWithUser';\nimport { handleOnSubmit } from './utils/handlers/handleOnSubmit';\nimport { Header } from './components/Header';\nimport { changeTheme } from './utils/changeTheme';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<TodoWithUser[]>(\n    combineTodoAndUser(todosFromServer, usersFromServer),\n  );\n  const [selectedUserId, setSelectedUserId] = useState<User['id']>(0);\n  const [titleOfNewTodo, setTitleOfNewTodo] = useState<string>('');\n  const [showErrorEmptyTitle, setShowErrorEmptyTitle]\n   = useState<boolean>(false);\n  const [showErrorUserIsNotChoosen, setShowErrorUserIsNotChoosen]\n   = useState<boolean>(false);\n  const [theme, setTheme] = useState<'light' | 'dark'>('light');\n\n  return (\n    <div className={`App App--${theme}`}>\n      <Header\n        changeTheme={() => changeTheme(theme, setTheme)}\n        theme={theme}\n      />\n\n      <div className={`App__form App__form--${theme}`}>\n        <h1>Add todo form</h1>\n        <form\n          action=\"/api/todos\"\n          method=\"POST\"\n          onSubmit={(event) => handleOnSubmit(\n            event,\n            setTodos,\n            todos,\n            titleOfNewTodo,\n            selectedUserId,\n            usersFromServer,\n            setSelectedUserId,\n            setTitleOfNewTodo,\n            setShowErrorEmptyTitle,\n            setShowErrorUserIsNotChoosen,\n          )}\n        >\n          <div className={`field field--${theme}`}>\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              onChange={(event) => handleChangeInput(\n                event,\n                setTitleOfNewTodo,\n                setShowErrorEmptyTitle,\n              )}\n              value={titleOfNewTodo}\n              placeholder=\"Enter a title of your new ToDo\"\n            />\n            <br />\n            {showErrorEmptyTitle && (\n              <span className=\"error\">Please enter a title</span>\n            )}\n          </div>\n          <div className={`field field--${theme}`}>\n            <select\n              data-cy=\"userSelect\"\n              value={selectedUserId}\n              onChange={(event) => handleChooseUser(\n                event,\n                setSelectedUserId,\n                setShowErrorUserIsNotChoosen,\n              )}\n            >\n              <option\n                value=\"0\"\n                disabled\n              >\n                Choose a user\n              </option>\n              {usersFromServer.map(({ name, id }) => {\n                return <option key={id} value={id}>{name}</option>;\n              })}\n            </select>\n            <br />\n            {showErrorUserIsNotChoosen && (\n              <span className=\"error\">Please choose a user</span>\n            )}\n          </div>\n          <button\n            className={`submitBtn submitBtn--${theme}`}\n            type=\"submit\"\n            data-cy=\"submitButton\"\n          >\n            Add\n          </button>\n        </form>\n        <hr />\n        <TodoList todos={todos} theme={theme} />\n      </div>\n    </div>\n  );\n};\n","import { Todo } from '../types/Todo';\nimport { TodoWithUser } from '../types/TodoWithUser';\nimport { User } from '../types/User';\n\nexport const combineTodoAndUser = (\n  todos: Todo[], users: User[],\n): Array<TodoWithUser> => {\n  const combinedData = todos.map((todo: Todo) => {\n    const userObj: User | null\n    = users.find((user: User) => user.id === todo.userId) || null;\n\n    if (userObj !== null) {\n      const userInOutPut = {\n        id: userObj.id,\n        name: userObj.name,\n        username: userObj.username,\n        email: userObj.email,\n      };\n\n      return {\n        id: todo.id,\n        title: todo.title,\n        completed: todo.completed,\n        userId: todo.userId,\n        user: userInOutPut,\n      };\n    }\n\n    return null;\n  });\n\n  const filteredData\n  = combinedData.filter(data => data !== null) as TodoWithUser[];\n\n  return filteredData;\n};\n","import React from 'react';\n\nexport const changeTheme = (\n  theme: 'light' | 'dark',\n  setTheme: React.Dispatch<React.SetStateAction<'light' | 'dark'>>,\n): void => {\n  if (theme === 'light') {\n    setTheme('dark');\n  } else {\n    setTheme('light');\n  }\n};\n","import { User } from '../../types/User';\nimport { TodoWithUser } from '../../types/TodoWithUser';\n\nexport const handleOnSubmit = (\n  event: React.FormEvent,\n  setTodos: React.Dispatch<React.SetStateAction<TodoWithUser[]>>,\n  todos: TodoWithUser[],\n  titleOfNewTodo: string,\n  selectedUserId: number,\n  usersFromServer: User[],\n  setSelectedUserId: React.Dispatch<React.SetStateAction<User['id']>>,\n  setTitleOfNewTodo: React.Dispatch<React.SetStateAction<string>>,\n  setShowErrorEmptyTitle: React.Dispatch<React.SetStateAction<boolean>>,\n  setShowErrorUserIsNotChoosen: React.Dispatch<React.SetStateAction<boolean>>,\n) => {\n  event.preventDefault();\n\n  if (titleOfNewTodo.trim() === '') {\n    setShowErrorEmptyTitle(true);\n    setTitleOfNewTodo('');\n  } else {\n    setShowErrorEmptyTitle(false);\n  }\n\n  if (selectedUserId === 0) {\n    setShowErrorUserIsNotChoosen(true);\n  } else {\n    setShowErrorUserIsNotChoosen(false);\n  }\n\n  if (titleOfNewTodo.trim() !== '' && selectedUserId !== 0) {\n    const newTodo = {\n      id: todos.length + 1,\n      title: titleOfNewTodo.trim(),\n      completed: false,\n      userId: selectedUserId,\n      user: usersFromServer.find(user => user.id === selectedUserId) as User,\n    };\n\n    setTodos([...todos, newTodo]);\n    setSelectedUserId(0);\n    setTitleOfNewTodo('');\n    setShowErrorEmptyTitle(false);\n    setShowErrorUserIsNotChoosen(false);\n  }\n};\n","export const handleChangeInput = (\n  event: React.ChangeEvent<HTMLInputElement>,\n  setValue: React.Dispatch<React.SetStateAction<string>>,\n  setShowErrorEmptyTitle: React.Dispatch<React.SetStateAction<boolean>>,\n) => {\n  setValue(event.target.value);\n  if (event.target.value.length === 0) {\n    setShowErrorEmptyTitle(true);\n  }\n};\n","export const handleChooseUser = (\n  event: React.ChangeEvent<HTMLSelectElement>,\n  setValue: React.Dispatch<React.SetStateAction<number>>,\n  setShowErrorUserIsNotChoosen: React.Dispatch<React.SetStateAction<boolean>>,\n) => {\n  setValue(+event.target.value);\n  if (event.target.value.length === 0) {\n    setShowErrorUserIsNotChoosen(true);\n  }\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}